apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  # Slack service configuration
  service.slack: |
    token: $slack-token
  
  # Email service configuration
  service.email.gmail: |
    username: $email-username
    password: $email-password
    host: smtp.gmail.com
    port: 587
    from: $email-username
  
  # Deployment success template
  template.app-deployed: |
    message: |
      ‚úÖ *Deployment Successful*
      
      *Application:* {{.app.metadata.name}}
      *Environment:* {{.app.metadata.labels.environment}}
      *Version:* {{.app.spec.source.targetRevision}}
      *Commit:* {{.app.status.sync.revision | substr 0 7}}
      *Status:* {{.app.status.sync.status}}
      *Health:* {{.app.status.health.status}}
      
      üîó <{{.context.argocdUrl}}/applications/{{.app.metadata.name}}|View in ArgoCD>
      üìä <http://grafana.observability.svc.cluster.local:3000/d/deployment-timeline|View Dashboard>
      üìù <http://grafana.observability.svc.cluster.local:3000/explore?left={{`{\"datasource\":\"Loki\",\"queries\":[{\"expr\":\"{app=\\\"{{.app.metadata.name}}\\\"}\"}`}}|View Logs>
    slack:
      attachments: |
        [{
          "color": "good",
          "title": "{{.app.metadata.name}} deployed to {{.app.metadata.labels.environment}}",
          "fields": [
            {"title": "Version", "value": "{{.app.spec.source.targetRevision}}", "short": true},
            {"title": "Commit", "value": "{{.app.status.sync.revision | substr 0 7}}", "short": true},
            {"title": "Status", "value": "{{.app.status.sync.status}}", "short": true},
            {"title": "Health", "value": "{{.app.status.health.status}}", "short": true}
          ]
        }]
  
  # Deployment failure template
  template.app-sync-failed: |
    message: |
      ‚ùå *Deployment Failed*
      
      *Application:* {{.app.metadata.name}}
      *Environment:* {{.app.metadata.labels.environment}}
      *Error:* {{.app.status.operationState.message}}
      *Phase:* {{.app.status.operationState.phase}}
      
      üîó <{{.context.argocdUrl}}/applications/{{.app.metadata.name}}|View in ArgoCD>
      üìù <http://grafana.observability.svc.cluster.local:3000/explore?left={{`{\"datasource\":\"Loki\",\"queries\":[{\"expr\":\"{app=\\\"{{.app.metadata.name}}\\\",level=\\\"error\\\"}\"}`}}|View Error Logs>
    slack:
      attachments: |
        [{
          "color": "danger",
          "title": "{{.app.metadata.name}} deployment failed in {{.app.metadata.labels.environment}}",
          "text": "{{.app.status.operationState.message}}",
          "fields": [
            {"title": "Phase", "value": "{{.app.status.operationState.phase}}", "short": true},
            {"title": "Started", "value": "{{.app.status.operationState.startedAt}}", "short": true}
          ]
        }]
  
  # Deployment in progress template
  template.app-sync-running: |
    message: |
      üîÑ *Deployment In Progress*
      
      *Application:* {{.app.metadata.name}}
      *Environment:* {{.app.metadata.labels.environment}}
      *Version:* {{.app.spec.source.targetRevision}}
      
      üîó <{{.context.argocdUrl}}/applications/{{.app.metadata.name}}|View in ArgoCD>
    slack:
      attachments: |
        [{
          "color": "warning",
          "title": "{{.app.metadata.name}} deploying to {{.app.metadata.labels.environment}}",
          "fields": [
            {"title": "Version", "value": "{{.app.spec.source.targetRevision}}", "short": true},
            {"title": "Status", "value": "Syncing", "short": true}
          ]
        }]
  
  # Trigger for successful deployments
  trigger.on-deployed: |
    - description: Application is synced and healthy
      send:
      - app-deployed
      when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
  
  # Trigger for failed deployments
  trigger.on-sync-failed: |
    - description: Application sync failed
      send:
      - app-sync-failed
      when: app.status.operationState.phase in ['Error', 'Failed']
  
  # Trigger for deployment in progress
  trigger.on-sync-running: |
    - description: Application is being synced
      send:
      - app-sync-running
      when: app.status.operationState.phase in ['Running']
  
  # Environment-specific subscriptions
  subscriptions: |
    # Production deployments
    - recipients:
      - slack:prod-deployments
      - email:ops@example.com
      triggers:
      - on-deployed
      - on-sync-failed
      selector: app.metadata.labels.environment == 'prod'
    
    # Staging deployments
    - recipients:
      - slack:staging-deployments
      - email:qa@example.com
      triggers:
      - on-deployed
      - on-sync-failed
      selector: app.metadata.labels.environment == 'staging'
    
    # Dev deployments
    - recipients:
      - slack:dev-deployments
      triggers:
      - on-deployed
      - on-sync-failed
      - on-sync-running
      selector: app.metadata.labels.environment == 'dev'
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-notifications-secret
  namespace: argocd
type: Opaque
stringData:
  slack-token: "<your-slack-bot-token>"
  email-username: "<your-email@example.com>"
  email-password: "<your-email-app-password>"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-notifications
    app.kubernetes.io/part-of: argocd
data:
  # Default context
  context: |
    argocdUrl: https://argocd.example.com
